package lbj.professor.pairwise;

import lbjse.objectsearch.*;
import lbj.common.*;
import LBJ2.classify.*;
import java.util.*;
import common.GenericPair;

real% dept_features(GenericPair pp) <-
{
    DocQueryPair pair1 = (DocQueryPair) pp.getFirst();
    DocQueryPair pair2 = (DocQueryPair) pp.getSecond();
    List diffFeatures = Utils.differentiateFeatures(new lbj.professor.dept_features(),pair1, pair2);
    for (Iterator it = diffFeatures.iterator(); it.hasNext(); ){
        RealFeature f = (RealFeature) it.next();
        sense f.getIdentifier() : f.getValue();
    }
}

discrete{false, true} dept_ranker(GenericPair pair) <-
learn PairOracle
  using dept_features
  with new SparseAveragedPerceptron(1.0, 0, 2) 
  preExtract true
  
  cval 5 "random"
end

