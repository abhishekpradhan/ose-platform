<?xml version="1.0"?>
<project name="AnnieDB" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build/classes"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>

  <path id="build.classpath">
	<fileset dir="${basedir}/">
		<include name="lib/*.jar"/>
	</fileset>
  </path>
	
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" >
    	<classpath refid="build.classpath"/>
  	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
  	<!-- TODO : this can make a mess if there are many versions of AnnieDB.jar in classpath
  	Because they might each have a different db configurations  -->
  	<copy todir="${build}">
  	    <fileset dir="conf"/>
  	</copy>

    <!-- Put everything in ${build} into the AnnieDB.jar file -->
    <jar jarfile="${dist}/lib/AnnieDB.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  <target name="deps" description="Build all dependent projects." />
	
</project>
